Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.

Notice that you may not slant the container.
Input: height = [1,8,6,2,5,4,8,3,7]
Output: 49
Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.

*********************************************SOLUTION*****************************

public class Solution {
    public int MaxArea(int[] height) {
        
        //Left and Right pointers set to max container
        int L = 0; int R = height.Count()-1; int area = 0;
        
        if(height.Count() == 1) return 0;
        if(height.Count() == 2) return Math.Min(height[L], height[R]);
        
       while(L < R) {
           area =Math.Max(area,Math.Min(height[L],height[R]) * (R-L));
           
            if(height[L] <= height[R]){
                L++;
            }
           else{
               R--;
           }
            
       }
        
     return area;
    }
}
